if (self.CavalryLogger) { CavalryLogger.start_js(["wTl6W"]); }

__d("XCheckpointAttachmentProxyController",["XController"],(function(a,b,c,d,e,f){e.exports=b("XController").create("/support/checkpoint/view_attachment/",{handle:{type:"String",required:!0},max_size:{type:"Int"}})}),null);
__d("CheckpointFileUploader",["cx","DOM","DOMQuery","XCheckpointAttachmentProxyController"],(function(a,b,c,d,e,f,g){__p&&__p();a={setupFileInputWithPreview:function(a,c,d,e){c=b("DOMQuery").find(c,".fileInputUpload");b("DOM").remove(c);var f={name:d,meta:e};c={payload:f,getPayload:function(){return f}};a.handleSuccess("success",{response:c})},loadPreview:function(a,c){c=b("XCheckpointAttachmentProxyController").getURIBuilder().setString("handle",c).getURI().toString();b("DOM").setContent(a,b("DOM").create("img",{src:c,"class":"_59uw"}))},setListener:function(a,c){c.subscribe("success",function(b,event){this.loadPreview(a,event.response.payload.meta)}.bind(this)),c.subscribe("remove",function(c){b("DOM").empty(a)})}};e.exports=a}),null);
__d("FileHandle",["Arbiter","ArbiterMixin","AsyncUploadRequest","Button","CSS","DOM","DOMQuery","Event","FileInputUploader","mixin"],(function(a,b,c,d,e,f){__p&&__p();var g;c=babelHelpers.inherits(a,b("mixin")(b("ArbiterMixin")));g=c&&c.prototype;function a(a,c,d,e,f,h,i){"use strict";__p&&__p();g.constructor.call(this);this._container=a;this._uri=c;this._inputContainer=b("DOMQuery").find(this._container,".fileInputUpload");b("DOMQuery").isNodeOfType(this._inputContainer,"input")?this._inputElem=this._inputContainer:this._inputElem=b("DOMQuery").find(this._inputContainer,"input");this._name=this._inputElem.name;this._showMultiplePrompts=!1;this._closeButton=b("DOMQuery").find(this._container,".closeButtonLabel");this._submitButtons=e||[];this._allowCrossOrigin=!!f;this._showUploadedFiles=!!h;this._previousUploadedFiles=i||[];this._saving=!1;this._uploader=new(b("FileInputUploader"))(this._inputElem);this._uploader.setURI(this._uri).setAllowCrossOrigin(this._allowCrossOrigin).subscribe("success",this.handleSuccess.bind(this));this._uploader.subscribe("failure",this.handleFailure.bind(this));this._inputElem.multiple&&(b("AsyncUploadRequest").isSupported()?this._uploader.setUploadInParallel(!0):this._inputElem.multiple=!1,this._showMultiplePrompts=!0);b("Event").listen(this._inputElem,"change",this.handleChange.bind(this));this._inputElem.value&&this.handleChange();for(var d=0;d<this._previousUploadedFiles.length;d++)this.appendUploadedFile(this._previousUploadedFiles[d])}a.prototype.setSubmitButtons=function(a){"use strict";this._submitButtons=a};a.prototype.setData=function(a){"use strict";this._uploader.setData(a)};a.prototype.handleChange=function(){"use strict";this.inform("change"),this._send()};a.prototype.addFilesAndSend=function(a){"use strict";if(this._saving)return!1;this._uploader.setFiles(a);this._send();return!0};a.prototype._send=function(){"use strict";this._uploader.send();b("DOM").remove(this._inputContainer);this._saving=!0;b("CSS").addClass(this._container,"async_saving");for(var a=0;a<this._submitButtons.length;a++)b("Button").setEnabled(this._submitButtons[a],!1)};a.prototype.handleFailure=function(a,c){"use strict";if(this.inform("failure",c)===!1)return;for(var a=0;a<this._submitButtons.length;a++)b("Button").setEnabled(this._submitButtons[a],!0);this._saving=!1;b("CSS").removeClass(this._container,"async_saving");this._inputElem.value="";b("DOM").prependContent(this._container,this._inputContainer)};a.prototype.handleSuccess=function(a,c){"use strict";__p&&__p();if(this.inform("success",c)===!1)return;for(var a=0;a<this._submitButtons.length;a++)b("Button").setEnabled(this._submitButtons[a],!0);a=c.response.getPayload();this._saving=!1;b("CSS").removeClass(this._container,"async_saving");this._inputElem.value="";this._showMultiplePrompts&&b("DOM").prependContent(this._container,this._inputContainer);this._showUploadedFiles&&this.appendUploadedFile(a)};a.prototype.appendUploadedFile=function(a){"use strict";__p&&__p();var c=this._closeButton.cloneNode(!0);b("CSS").show(c);var d=this._inputElem.getAttribute("name"),e=b("DOM").create("div",null,[c,a.name,b("DOM").create("input",{type:"hidden",name:d,value:a.meta})]);b("Event").listen(c,"click",function(a){if(this.inform("remove")===!1)return;b("DOM").remove(e);this._showMultiplePrompts||b("DOM").prependContent(this._container,this._inputContainer)}.bind(this));b("DOM").appendContent(this._container,e);b("Arbiter").inform("Form/change",{node:e})};e.exports=a}),null);